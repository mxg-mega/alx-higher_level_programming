>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_1 = [[1, 1], [1, 1]]
>>> matrix_divided(matrix_1, 2)
[[0.5, 0.5], [0.5, 0.5]]
>>> matrix_divided(None, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_1[0][1] = "1"
>>> matrix_divided(matrix_1, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_2 = [[1, 2, 3], [1, 2], [7, 7, 7]]
>>> matrix_divided(matrix_2, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided(matrix, "i")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided(matrix, float("nan"))
Traceback (most recent call last):
    ...
TypeError: div must be a number
